# Dockerfile-worker

FROM python:3.10-slim

# Install system dependencies, including procps for pgrep
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        libpq-dev \
        curl \
        procps && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set environment variables for Python
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set the working directory
WORKDIR /menome/

# Create /menome/config/ directory
RUN mkdir -p /menome/config/

# Copy the requirements file first to leverage Docker layer caching
COPY backend/requirements.txt /menome/backend/

# Upgrade pip and install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r backend/requirements.txt

# Copy the entire backend directory into the container
COPY backend/ /menome/backend/

# Copy health check script
COPY backend/healthchecks/celery_healthcheck.sh /usr/local/bin/celery_healthcheck.sh
RUN chmod +x /usr/local/bin/celery_healthcheck.sh

# Optional: Create a non-root user for enhanced security
RUN useradd -m celeryuser && \
    chown -R celeryuser:celeryuser /menome/
USER celeryuser

# Define the default command to run the Celery worker
CMD ["celery", "-A", "backend.worker.tasks.celery_app", "worker", "--loglevel=INFO", "--without-mingle"]
