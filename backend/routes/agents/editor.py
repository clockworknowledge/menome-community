import logging
from backend.config import CurrentConfig
from backend.services.document_services import generate_shareable_link
from neo4j import GraphDatabase

article_templates = {
    "layout_1": """
## [{{title}}]({{path}})

![Article Image]({{image}})

{{summary}}
    """,
    "layout_2": """
![Article Image]({{image}})

## [{{title}}]({{path}})

{{summary}}
    """,
    "layout_3": """
## [{{title}}]({{path}})

![Article Image]({{image}})

{{summary}}
    """,
    "layout_2_custom": """
## GPT Newspaper

### {{date}}

---

{{articles}}

---

Â© Generated by [clockworKnowledge Research Agent](https://www.clockworKnowledge.com)
    """,
}

class EditorAgent:
    def __init__(self, layout, userUuid):
        self.layout = layout
        self.userUuid = userUuid
        self.driver = GraphDatabase.driver(CurrentConfig.NEO4J_URI, auth=(CurrentConfig.NEO4J_USER, CurrentConfig.NEO4J_PASSWORD))

    def editor(self, articles):
        logging.basicConfig(level=logging.INFO)
        # Article template
        article_template = article_templates[self.layout]
        
        # Generate articles Markdown
        articles_markdown = ""
        for article in articles:
            url = generate_shareable_link(article["uuid"], 'html', self.userUuid, self.driver)
            article["path"] = url
            article_md = article_template.replace("{{title}}", article["title"])
            article_md = article_md.replace("{{image}}", article["image"])
            article_md = article_md.replace("{{summary}}", article["summary"])
            article_md = article_md.replace("{{path}}", article["path"])
            articles_markdown += article_md + "\n\n"
            logging.info(f"Added article {article['title']} to newspaper")

        # Newspaper template for layout_2_custom
        if self.layout == "layout_2":
            newspaper_template = article_templates["layout_2_custom"]
        else:
            newspaper_template = """
                # {{title}}

                ### {{date}}

                ---

                {{articles}}

                ---

                Generated by [clockworKnowledge Research Agent](https://www.clockworKnowledge.com)
            """

        # Replace placeholders in template
        newspaper_markdown = newspaper_template.replace("{{date}}", articles[0]["date"])
        newspaper_markdown = newspaper_markdown.replace("{{articles}}", articles_markdown)
        return newspaper_markdown

    def run(self, articles):
        res = self.editor(articles)
        return res

    def close(self):
        self.driver.close()